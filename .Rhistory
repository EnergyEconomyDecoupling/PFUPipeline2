library(targets)
targets::use_targets()
library(targets)
tar_make()
tar_destroy()
tar_make()
conn <- DBI::dbConnect(RPostgres::Postgres(),
dbname = "v1.4a1",
user = "postgres",
host = "eviz.cs.calvin.edu",
port = 5432)
DBI::dbDisconnect(conn)
conn <- DBI::dbConnect(RPostgres::Postgres(),
dbname = "v1.4a1",
user = "postgres",
host = "eviz.cs.calvin.edu",
port = 5432)
DBI::dbDisconnect(conn)
conn <- DBI::dbConnect(RPostgres::Postgres(),
dbname = "v1.4a1",
user = "postgres",
host = "eviz.cs.calvin.edu",
port = 5432)
tar_destroy(ask = FALSE)
PFUPipelineTools::pl_destroy(conn, drop_tables = TRUE)
DBI::dbDisconnect(conn)
tar_make()
tar_visnetwork()
# Source other scripts as needed.
source("pipeline.R")
conn <- DBI::dbConnect(RPostgres::Postgres(),
dbname = "v1.4a1",
user = "postgres",
host = "eviz.cs.calvin.edu",
port = 5432)
tar_destroy(ask = FALSE)
PFUPipelineTools::pl_destroy(conn, drop_tables = TRUE)
DBI::dbDisconnect(conn)
conn <- DBI::dbConnect(RPostgres::Postgres(),
dbname = "v1.4a1",
user = "postgres",
host = "eviz.cs.calvin.edu",
port = 5432)
tar_destroy(ask = FALSE)
conn <- DBI::dbConnect(RPostgres::Postgres(),
dbname = "v1.4a1",
user = "postgres",
host = "eviz.cs.calvin.edu",
port = 5432)
tar_destroy(ask = FALSE)
PFUPipelineTools::pl_destroy(conn, drop_tables = TRUE)
DBI::dbDisconnect(conn)
source("~/.active-rstudio-document")
tar_make()
source(clean.R)
source("clean.R")
tar_destroy()
source(clean.R)
source("clean.R")
source("~/github/PFUPipeline2/clean.R")
conn <- DBI::dbConnect(RPostgres::Postgres(),
dbname = "v1.4a1",
user = "postgres",
host = "eviz.cs.calvin.edu",
port = 5432)
on.exit(DBI::dbDisconnect(conn))
PFUPipelineTools::pl_destroy(conn, destroy_cache = TRUE, drop_tables = TRUE)
source("~/github/PFUPipeline2/clean.R")
conn <- DBI::dbConnect(RPostgres::Postgres(),
dbname = "v1.4a1",
user = "postgres",
host = "eviz.cs.calvin.edu",
port = 5432)
on.exit(DBI::dbDisconnect(conn))
PFUPipelineTools::pl_destroy(conn, destroy_cache = TRUE, drop_tables = TRUE)
source("~/github/PFUPipeline2/clean.R")
tarmake
tar_make()
usethis::use_news_md()
